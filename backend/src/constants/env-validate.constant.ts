import { bool, cleanEnv, num, port, str } from "envalid";

const env = cleanEnv(process.env, {
  NODE_ENV: str(),
  API_PORT: port(),
  ORIGIN_APP: str(),
  MONGODB_CONNECTION_STRING: str(),
  RESEND_API_KEY: str(),
  TEST_EMAIL: str(),
  OFFICIAL_EMAIL: str(),
  SEND_LIMIT_PER_PERIOD: num(),
  INITIAL_FETCH_LIMIT: num(),
  PAGINATION_FETCH_LIMIT: num(),
  JWT_ACCESS_SECRET_KEY: str(),
  JWT_REFRESH_SECRET_KEY: str(),
  JWT_VERIFICATION_SECRET_KEY: str(),
  JWT_USER_PREFERENCE_SECRET_KEY: str(),
  API_INTERNAL_SECRET_KEY: str(),
  API_ADMIN_SECRET_KEY: str(),
  AWS_REGION: str(),
  AWS_BUCKET_NAME: str(),
  AWS_ACCESS_KEY_ID: str(),
  AWS_SECRET_ACCESS_KEY: str(),
  FIREBASE_PROJECT_ID: str(),
  FIREBASE_PRIVATE_KEY_ID: str(),
  FIREBASE_PRIVATE_KEY: str(),
  FIREBASE_CLIENT_EMAIL: str(),
  FIREBASE_CLIENT_ID: str(),
  IP2LOCATION_KEY: str(),
  SESSION_OFFLINE_TIMEOUT: num(),
  RATING_MIN_PROMPT_THRESHOLD: num(),
  RATING_MAX_PROMPT_THRESHOLD: num(),
  PLAYBACK_MIN_DURATION_SECONDS: num(),
});

export const {
  NODE_ENV,
  API_PORT,
  ORIGIN_APP,
  MONGODB_CONNECTION_STRING,
  RESEND_API_KEY,
  TEST_EMAIL,
  OFFICIAL_EMAIL,
  SEND_LIMIT_PER_PERIOD,
  INITIAL_FETCH_LIMIT,
  PAGINATION_FETCH_LIMIT,
  JWT_ACCESS_SECRET_KEY,
  JWT_REFRESH_SECRET_KEY,
  JWT_VERIFICATION_SECRET_KEY,
  JWT_USER_PREFERENCE_SECRET_KEY,
  API_INTERNAL_SECRET_KEY,
  API_ADMIN_SECRET_KEY,
  AWS_REGION,
  AWS_BUCKET_NAME,
  AWS_ACCESS_KEY_ID,
  AWS_SECRET_ACCESS_KEY,
  FIREBASE_PROJECT_ID,
  FIREBASE_PRIVATE_KEY_ID,
  FIREBASE_PRIVATE_KEY,
  FIREBASE_CLIENT_EMAIL,
  FIREBASE_CLIENT_ID,
  IP2LOCATION_KEY,
  SESSION_OFFLINE_TIMEOUT,
  RATING_MIN_PROMPT_THRESHOLD,
  RATING_MAX_PROMPT_THRESHOLD,
  PLAYBACK_MIN_DURATION_SECONDS,
} = env;
